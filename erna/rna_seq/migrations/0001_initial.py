# Generated by Django 4.2.1 on 2023-08-10 13:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('user_name', models.CharField(max_length=256, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['email'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(default='P00001', max_length=10, unique=True, verbose_name='project ID')),
                ('project_name', models.CharField(blank=True, max_length=50)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(blank=True, max_length=526)),
                ('status', models.CharField(choices=[('A', 'active'), ('D', 'deleted')], default='A', max_length=1)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner identified by user_id')),
            ],
            options={
                'ordering': ['project_id'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=10, unique=True, verbose_name='task ID')),
                ('params', models.CharField(blank=True, max_length=1256, verbose_name='parameters in json string')),
                ('input', models.CharField(blank=True, max_length=1256, verbose_name='input metadata in json string')),
                ('output', models.CharField(blank=True, max_length=1256, verbose_name='output metadata in json string')),
                ('is_ready', models.BooleanField(default=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('executor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rna_seq.project')),
            ],
            options={
                'ordering': ('project', 'task_id'),
            },
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tool_name', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=20)),
                ('tool_path', models.CharField(max_length=256)),
                ('default_parameters', models.CharField(blank=True, max_length=1000, verbose_name='default parameters of the tool')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('download_url', models.CharField(blank=True, max_length=1256)),
            ],
            options={
                'ordering': ['tool_name', 'version'],
            },
        ),
        migrations.CreateModel(
            name='TaskTree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_task', to='rna_seq.task')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_task', to='rna_seq.task')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rna_seq.project')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_task', to='rna_seq.task')),
            ],
            options={
                'ordering': ('project',),
            },
        ),
        migrations.CreateModel(
            name='TaskExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('S', 'suspend'), ('R', 'running'), ('D', 'finished'), ('F', 'failed')], max_length=10)),
                ('command', models.CharField(max_length=1256, verbose_name='command for tool launching')),
                ('start_time', models.DateTimeField(blank=True)),
                ('end_time', models.DateTimeField(blank=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rna_seq.task')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='tool',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='rna_seq.tool'),
        ),
        migrations.CreateModel(
            name='ProjectUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rna_seq.project', verbose_name='Executed project identified by project_id')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='executor identified by user_id')),
            ],
            options={
                'ordering': ['project', 'user'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='task',
            unique_together={('project', 'task_id')},
        ),
    ]
